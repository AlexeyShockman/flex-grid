/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font:1em monospace,monospace}a{background:0 0}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font:1em monospace,monospace}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font:100%/1.15 inherit;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}*,::after,::before{box-sizing:inherit}html{box-sizing:border-box}body{margin:0}img{max-width:100%}a{text-decoration:none}header{background:#000;color:#fff;display:none;-webkit-box-pack:center;justify-content:center;width:100%}footer{background:#000;display:none;color:#fff;width:100%;-webkit-box-pack:center;justify-content:center}.flex .cards{display:-webkit-box;display:flex;flex-wrap:wrap;padding:10px 150px;gap:20px}.flex .cards .card-xl{flex-basis:100%}.flex .cards .card-l{flex-basis:calc(100% / 2 - 20px * 1 / 2)}.flex .cards .card-m{flex-basis:calc(100% / 3 - 20px * 2 / 3)}.flex .cards .card-s{flex-basis:calc(100% / 4 - 20px * 3 / 4)}.flex .cards .card:hover{box-shadow:0 0 20px 5px red;-webkit-transition-duration:.8s;transition-duration:.8s}.flex .cards .card{background:#fff;display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;gap:32px;-webkit-box-pack:justify;justify-content:space-between;-webkit-transition-duration:1s;transition-duration:1s;border-radius:10px;padding:35px}.flex .cards .card *{font-family:'Noto Sans',sans-serif}.flex .cards .card .card-main{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;gap:8px}.flex .cards .card .card-main .card-main-title{margin:0;color:#000;font-weight:700;font-size:24px;line-height:32px}.flex .cards .card .card-main .card-main-text{margin:0;color:#777;font-weight:400;font-size:16px;line-height:24px}.flex .cards .card a{color:#8eba5b;line-height:22px}.flex .cards .card a:after{content:'';margin-left:8px;height:22px;width:22px;background:url(../../img/icon.png) no-repeat;position:absolute;background-size:22px}.grid .cards{padding:10px 150px;display:grid;grid-template-columns:repeat(12,1fr);-webkit-column-gap:20px;-moz-column-gap:20px;column-gap:20px;row-gap:20px}.grid .cards .card-xl{grid-column:12 span}.grid .cards .card-l{grid-column:6 span}.grid .cards .card-m{grid-column:4 span}.grid .cards .card-s{grid-column:3 span}.grid .cards .card:hover{box-shadow:0 0 20px 5px #00f;-webkit-transition-duration:.8s;transition-duration:.8s}.grid .cards .card{background:#fff;-webkit-transition-duration:1s;transition-duration:1s;border-radius:10px;padding:35px;display:grid;row-gap:32px;align-content:space-between}.grid .cards .card *{font-family:'Noto Sans',sans-serif}.grid .cards .card .card-main{display:grid;row-gap:8px}.grid .cards .card .card-main .card-main-title{margin:0;color:#000;font-weight:700;font-size:24px;line-height:32px}.grid .cards .card .card-main .card-main-text{margin:0;color:#777;font-weight:400;font-size:16px;line-height:24px}.grid .cards .card a{color:#8eba5b;line-height:22px}.grid .cards .card a:after{content:'';margin-left:8px;height:22px;width:22px;background:url(../../img/icon.png) no-repeat;position:absolute;background-size:22px}.main{background:#c4c4c4}.main h1{background:#000;margin:0;padding:20px;color:Gold;text-align:center;font-family:'Noto Sans',sans-serif;text-transform:uppercase}.main h2{margin:0;padding:15px;color:#fff;text-align:center;font-family:'Noto Sans',sans-serif}.main .stile-switcher{position:fixed;top:80px}.main .stile-switcher button{height:70px;width:70px;margin:3px;border:none;border-radius:15px;font-size:22px;font-weight:900;color:#fff;opacity:25%}.main .stile-switcher button:hover{opacity:100%;border-radius:0;font-size:23px;-webkit-transition-duration:1.2s;transition-duration:1.2s}.main .stile-switcher .flex-btn{background:red}.main .stile-switcher .grid-btn{background:#00f}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
